# Python program to 
# demonstrate implementation of 
# queue using queue module 
  
  
from queue import Queue 
import threading
from time import sleep
from twittertools.tweet_import import tweet_import
from twittertools.make_word_cloud import word_cloud_from_txt
from copy import deepcopy
def do_twitter_analysis(item):
    print(f'working ...')
    item.classify_images()
    word_cloud_from_txt(item.write_summaryfile())
    print(f'done')

def work_twitterdata():
    print('Initiating work')
    while True:
        item = q.get()
        if item is None:
            break
        # do_twitter_analysis(item)
        print(item)
        sleep(2)
        q.task_done()



'''
    This provides a full interface to summarize a users twitter feed
    -- Currently looks at both text (tweets, retweets, replies) and images
    -- -- images are summarized by labels generated by Google Vision

    May be interesting to allow specific dates and so fourth eventually
'''
class queue_twitter_summary():
    '''
    Provides an interface to download twitter data
    '''
    def __init__(self):

        maxque = 3
        q = Queue(maxsize=maxque) 
        threads = []
        username = 'brabbott42'
        pages = 3

        tweetClass = tweet_import()
        # a.analyzeUsername('brabbott42', range(0, 1000, 200))
        tweets = []
        for i in range(pages):
            tweetClass.analyzeUsername(username, tweetcount=20)
            tweets.append(deepcopy(tweetClass))
            # This updates the page number incrementally
        print('Tweets retrieved')

            
        for tweet in tweets:
            do_twitter_analysis(tweet)
'''
        # tweetClass.classify_images()
        # word_cloud_from_txt(tweetClass.write_summaryfile())
'''
if __name__ == '__main__':
    a = queue_twitter_summary()
